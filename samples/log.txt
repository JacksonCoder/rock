==== Cache ====
cache ./declassign.ooc => declassign
===============

====> [Stack] at 120, and peek = CoverDecl

====> [FunctionCall] at 120, and peek = FunctionDecl
Got variableDecl msg: <unknown type>
====> [VariableDecl] at 287, and peek = FunctionDecl
====> [Stack] at 287, and peek = FunctionDecl
====> [VariableDecl] at 287, and peek = FunctionDecl
====> [FunctionCall] at 287, and peek = FunctionDecl
====> [Stack] at 287, and peek = FunctionDecl
====> [VariableDecl] at 287, and peek = FunctionDecl
====> [VariableDecl] at 287, and peek = FunctionDecl
====> [VariableDecl] at 287, and peek = FunctionDecl
Got variableDecl f: <unknown type>
====> [VariableDecl] at 287, and peek = FunctionDecl
====> [BinaryOp] at 287, and peek = FunctionDecl
====> [Stack] at 287, and peek = FunctionDecl
====> [VariableDecl] at 287, and peek = FunctionDecl
====> [BinaryOp] at 287, and peek = FunctionDecl
====> [FunctionCall] at 287, and peek = FunctionDecl
====> [FunctionCall] at 287, and peek = FunctionDecl
Should add lang imports
Considering path lang/BasicTypes.ooc
Adding import lang/BasicTypes to declassign
Considering path lang/memory.ooc
Adding import lang/memory to declassign
Considering path lang/ooclib.ooc
Adding import lang/ooclib to declassign
Trying to get /blue/Dev/rock/custom-sdk//lang/BasicTypes.ooc from cache
==== Cache ====
cache ./declassign.ooc => declassign
cache /blue/Dev/rock/custom-sdk//lang/BasicTypes.ooc => lang/BasicTypes
===============
====> [Stack] at 1215, and peek = ClassDecl
====> [Stack] at 1215, and peek = ClassDecl
====> [Stack] at 1215, and peek = ClassDecl
====> [Stack] at 1215, and peek = ClassDecl
Got variableDecl object: <unknown type>
====> [VariableDecl] at 1215, and peek = FunctionDecl
====> [BinaryOp] at 1215, and peek = If
====> [FunctionCall] at 1215, and peek = If
====> [If] at 1215, and peek = FunctionDecl
====> [Return] at 1215, and peek = FunctionDecl
====> [Stack] at 1215, and peek = ArrayList
====> [Return] at 1215, and peek = If
====> [If] at 1215, and peek = FunctionDecl
====> [Stack] at 1215, and peek = ClassDecl
====> [Stack] at 1215, and peek = ClassDecl
====> [Stack] at 1215, and peek = ClassDecl
====> [Stack] at 348, and peek = ClassDecl
====> [Stack] at 348, and peek = ArrayList
====> [FunctionCall] at 348, and peek = FunctionDecl
Should add lang imports
Considering path lang/BasicTypes.ooc
Considering path lang/memory.ooc
Adding import lang/memory to lang/BasicTypes
Considering path lang/ooclib.ooc
Adding import lang/ooclib to lang/BasicTypes
Trying to get /blue/Dev/rock/custom-sdk//lang/memory.ooc from cache
==== Cache ====
cache ./declassign.ooc => declassign
cache /blue/Dev/rock/custom-sdk//lang/BasicTypes.ooc => lang/BasicTypes
cache /blue/Dev/rock/custom-sdk//lang/memory.ooc => lang/memory
===============

error at line 2
====> [Stack] at 60, and peek = ArrayList
====> [Stack] at 65, and peek = ArrayList
====> [Stack] at 67, and peek = ArrayList
====> [Stack] at 67, and peek = ArrayList
====> [Stack] at 93, and peek = ArrayList
====> [Stack] at 93, and peek = ArrayList
 * ====> [FunctionCall] at 93, and peek = FunctionDecl
Should add lang imports
Considering path lang/BasicTypes.ooc
Adding import lang/BasicTypes to lang/memory
Considering path lang/memory.ooc
Considering path lang/ooclib.ooc
Adding import lang/ooclib to lang/memory
Trying to get /blue/Dev/rock/custom-sdk//lang/BasicTypes.ooc from cache
Trying to get /blue/Dev/rock/custom-sdk//lang/ooclib.ooc from cache
==== Cache ====
cache ./declassign.ooc => declassign
cache /blue/Dev/rock/custom-sdk//lang/BasicTypes.ooc => lang/BasicTypes
cache /blue/Dev/rock/custom-sdk//lang/memory.ooc => lang/memory
cache /blue/Dev/rock/custom-sdk//lang/ooclib.ooc => lang/ooclib
===============
Should add lang imports
Considering path lang/BasicTypes.ooc
Adding import lang/BasicTypes to lang/ooclib
Considering path lang/memory.ooc
Adding import lang/memory to lang/ooclib
Considering path lang/ooclib.ooc
Trying to get /blue/Dev/rock/custom-sdk//lang/BasicTypes.ooc from cache
Trying to get /blue/Dev/rock/custom-sdk//lang/memory.ooc from cache
Trying to get /blue/Dev/rock/custom-sdk//lang/ooclib.ooc from cache
Trying to get /blue/Dev/rock/custom-sdk//lang/memory.ooc from cache
Trying to get /blue/Dev/rock/custom-sdk//lang/ooclib.ooc from cache
++++++++++++ Resolving module declassign
     - Resolving call to printf (ref = (nil))
Resolving arg "Hi, my name is %s\n"
Resolving arg VariableAccess to name
     - Resolving access to name (ref = (nil))
Looking for VariableAccess to name in println: func
? Looking for variable name in Dog
&&&&&&&& Found vDecl for name

     - Resolving access to this (ref = (nil))
Looking for VariableAccess to this in println: func
Resolved expr, type = Dog
Trying to resolve printf() from node println: func
Trying to resolve printf() from node CoverDecl Dog
? Looking for function printf in Dog
Trying to resolve printf() from node Module
Looking for function printf in module declassign!
&&&&&&&& Found fDecl for call printf

Got suggestion printf: func for printf()
New high score, 0 wins against -1/(nil)
     - Resolving call to printf (ref = (nil))
Resolving arg "%s %d\n"
Resolving arg VariableAccess to msg
     - Resolving access to msg (ref = (nil))
Looking for VariableAccess to msg in main: func
Resolving arg VariableAccess to answer
     - Resolving access to answer (ref = (nil))
Looking for VariableAccess to answer in main: func
Trying to resolve printf() from node main: func
Trying to resolve printf() from node Module
Looking for function printf in module declassign!
&&&&&&&& Found fDecl for call printf

Got suggestion printf: func for printf()
New high score, 0 wins against -1/(nil)
     - Resolving access to x (ref = (nil))
Looking for VariableAccess to x in main: func
     - Resolving access to f (ref = (nil))
Looking for VariableAccess to f in main: func
     - Resolving access to name (ref = (nil))
Looking for VariableAccess to name in main: func
     - Resolving access to d (ref = (nil))
Looking for VariableAccess to d in main: func
Resolved expr, type = Dog
Null ref and non-null expr (VariableAccess to d), looking in type Dog
? Looking for variable name in Dog
&&&&&&&& Found vDecl for name

     - Resolving call to printf (ref = (nil))
Resolving arg "The name of my dog is %s\n"
Resolving arg VariableAccess to name
     - Resolving access to name (ref = (nil))
Looking for VariableAccess to name in main: func
     - Resolving access to d (ref = (nil))
Looking for VariableAccess to d in main: func
Resolved expr, type = Dog
Null ref and non-null expr (VariableAccess to d), looking in type Dog
? Looking for variable name in Dog
&&&&&&&& Found vDecl for name

Trying to resolve printf() from node main: func
Trying to resolve printf() from node Module
Looking for function printf in module declassign!
&&&&&&&& Found fDecl for call printf

Got suggestion printf: func for printf()
New high score, 0 wins against -1/(nil)
     - Resolving call to println (ref = (nil))
Resolving expr VariableAccess to d
     - Resolving access to d (ref = (nil))
Looking for VariableAccess to d in main: func
Trying to resolve println() from node main: func
Trying to resolve println() from node Module
Looking for function println in module declassign!
? Looking for function println in Dog
&&&&&&&& Found fDecl for println

Got suggestion println: func for println()
New high score, 10 wins against -1/(nil)
[Module] response = OK
++++++++++++ Resolving module lang/BasicTypes
     - Resolving call to gc_malloc (ref = (nil))
Resolving arg VariableAccess to instanceSize
     - Resolving access to instanceSize (ref = (nil))
Looking for VariableAccess to instanceSize in alloc: func
? Looking for variable instanceSize in Class
&&&&&&&& Found vDecl for instanceSize

     - Resolving access to this (ref = this: Class)
Resolved expr, type = Class
Trying to resolve gc_malloc() from node object: <unknown type>
Trying to resolve gc_malloc() from node alloc: func
Trying to resolve gc_malloc() from node ClassDecl Class
? Looking for function gc_malloc in Class
Trying to resolve gc_malloc() from node Module
Looking for function gc_malloc in module lang/BasicTypes!
&&&rock_tmp/./declassign.c: In function ‘main’:
rock_tmp/./declassign.c:15: attention : unused variable ‘z’
rock_tmp/./declassign.c:14: attention : unused variable ‘y’
rock_tmp/custom-sdk/lang/BasicTypes.c: In function ‘Object_instanceOf’:
rock_tmp/custom-sdk/lang/BasicTypes.c:43: attention : contrôle a atteint la fin non void de la fonction
rock_tmp/custom-sdk/lang/BasicTypes.c: In function ‘Class_inheritsFrom’:
rock_tmp/custom-sdk/lang/BasicTypes.c:19: attention : contrôle a atteint la fin non void de la fonction
rock_tmp/custom-sdk/lang/memory.c: In function ‘gc_calloc’:
rock_tmp/custom-sdk/lang/memory.c:7: attention : contrôle a atteint la fin non void de la fonction
/tmp/cciROGLs.o: In function `Class_alloc':
BasicTypes.c:(.text+0x2c): undefined reference to `Object___defaults__'
collect2: ld a retourné 1 code d'état d'exécution
C compiler failed, aborting compilation process
&&&&& Found fDecl for call gc_malloc in module lang/memory

Got suggestion gc_malloc: func for gc_malloc()
New high score, 20 wins against -1/(nil)
Resolving an If
     - Resolving access to class (ref = (nil))
Looking for VariableAccess to class in alloc: func
? Looking for variable class in Class
     - Resolving access to object (ref = (nil))
Looking for VariableAccess to object in alloc: func
Resolved expr, type = Object
Null ref and non-null expr (VariableAccess to object), looking in type Object
? Looking for variable class in Object
&&&&&&&& Found vDecl for class

     - Resolving access to this (ref = (nil))
Looking for VariableAccess to this in alloc: func
     - Resolving call to __defaults__ (ref = (nil))
Resolving expr VariableAccess to object
     - Resolving access to object (ref = (nil))
Looking for VariableAccess to object in alloc: func
Trying to resolve __defaults__() from node alloc: func
Trying to resolve __defaults__() from node ClassDecl Class
? Looking for function __defaults__ in Class
Trying to resolve __defaults__() from node Module
Looking for function __defaults__ in module lang/BasicTypes!
? Looking for function __defaults__ in Object
&&&&&&&& Found fDecl for __defaults__

Got suggestion __defaults__: func for __defaults__()
New high score, 10 wins against -1/(nil)
Resolving an If
     - Resolving call to inheritsFrom (ref = (nil))
Resolving arg VariableAccess to T
     - Resolving access to T (ref = (nil))
Looking for VariableAccess to T in instanceOf: func
Resolving expr VariableAccess to class
     - Resolving access to class (ref = (nil))
Looking for VariableAccess to class in instanceOf: func
? Looking for variable class in Object
&&&&&&&& Found vDecl for class

     - Resolving access to this (ref = this: Object)
Resolved expr, type = Object
Trying to resolve inheritsFrom() from node instanceOf: func
Trying to resolve inheritsFrom() from node ClassDecl Object
? Looking for function inheritsFrom in Object
Trying to resolve inheritsFrom() from node Module
Looking for function inheritsFrom in module lang/BasicTypes!
? Looking for function inheritsFrom in Class
&&&&&&&& Found fDecl for inheritsFrom

Got suggestion inheritsFrom: func for inheritsFrom()
New high score, 20 wins against -1/(nil)
[Module] response = OK
++++++++++++ Resolving module lang/memory
     - Resolving call to gc_malloc (ref = (nil))
Resolving arg VariableAccess to size
     - Resolving access to size (ref = (nil))
Looking for VariableAccess to size in gc_calloc: func
Trying to resolve gc_malloc() from node gc_calloc: func
Trying to resolve gc_malloc() from node Module
Looking for function gc_malloc in module lang/memory!
&&&&&&&& Found fDecl for call gc_malloc

Got suggestion gc_malloc: func for gc_malloc()
New high score, 20 wins against -1/(nil)
[Module] response = OK
++++++++++++ Resolving module lang/ooclib
[Module] response = OK
Writing varAcc VariableAccess to name, wrote varAcc expr VariableAccess to this, type = 0x9ae1fe0
Writing varAcc VariableAccess to name, wrote varAcc expr VariableAccess to d, type = 0x9ae1d40
Writing varAcc VariableAccess to name, wrote varAcc expr VariableAccess to d, type = 0x9ae1d40
Writing varAcc VariableAccess to instanceSize, wrote varAcc expr VariableAccess to this, type = 0x9b29a60
Writing varAcc VariableAccess to class, wrote varAcc expr VariableAccess to object, type = 0x9b29960
Writing varAcc VariableAccess to class, wrote varAcc expr VariableAccess to this, type = 0x9b296c0
[1m[31m[FAIL]
[0m