Resolving variable decl __returnVal2 : <unknown type> = HashEntry<K, V>.value
__returnVal2 : V = gc_malloc(size) (of type VariableDecl) wants to wholeAgain() because 'just set expr to gc_malloc cause generic!'
__returnVal2 = HashEntry<K, V>.value (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
__returnArg1 = __returnVal2 (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
Resolving variable decl __returnVal5 : <unknown type> = data[index]
__returnVal5 : T = gc_malloc(size) (of type VariableDecl) wants to wholeAgain() because 'just set expr to gc_malloc cause generic!'
__returnVal5 = ArrayList.data[index * size] (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
__returnArg4 = __returnVal5 (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
Resolving variable decl __returnVal9 : <unknown type> = element
__returnVal9 : T = gc_malloc(size) (of type VariableDecl) wants to wholeAgain() because 'just set expr to gc_malloc cause generic!'
__returnVal9 = element (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
__returnArg8 = __returnVal9 (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
Resolving variable decl __returnVal14 : <unknown type> = (comma expr)
__returnVal14 : T = gc_malloc(size) (of type VariableDecl) wants to wholeAgain() because 'just set expr to gc_malloc cause generic!'
__returnVal14 = (comma expr) (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
__returnArg13 = __returnVal14 (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
Resolving variable decl __returnVal21 : <unknown type> = c
__returnArg20 = __returnVal21 (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
Resolving variable decl __returnVal2 : V = gc_malloc(size)
memcpy(__returnVal2, HashEntry<K, V>.value, Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
memcpy(__returnArg1, __returnVal2, Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
Resolving variable decl __returnVal3 : <unknown type> = NullLiteral
__returnArg1 = __returnVal3 (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
Resolving variable decl __returnVal2 : V = gc_malloc(Class.size)
Resolving variable decl __returnVal3 : Pointer = NullLiteral
memcpy(__returnArg1, __returnVal3&, Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
Resolving variable decl __returnVal27 : <unknown type> = (comma expr)
__returnVal27 : T = gc_malloc(size) (of type VariableDecl) wants to wholeAgain() because 'just set expr to gc_malloc cause generic!'
__returnVal27 = (comma expr) (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
__returnArg26 = __returnVal27 (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
Resolving variable decl __returnVal5 : T = gc_malloc(size)
memcpy(__returnVal5, ArrayList.data[index * Class.size]&, Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
memcpy(__returnArg4, __returnVal5, Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
Resolving variable decl __returnVal7 : <unknown type> = element
__returnVal7 : T = gc_malloc(size) (of type VariableDecl) wants to wholeAgain() because 'just set expr to gc_malloc cause generic!'
__returnVal7 = element (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
__returnArg6 = __returnVal7 (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
Resolving variable decl __returnVal5 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal7 : T = gc_malloc(size)
memcpy(__returnVal7, element, Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
memcpy(__returnArg6, __returnVal7, Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
Resolving variable decl __returnVal9 : T = gc_malloc(size)
memcpy(__returnVal9, element, Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
memcpy(__returnArg8, __returnVal9, Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
Resolving variable decl __returnVal11 : <unknown type> = element
__returnVal11 : T = gc_malloc(size) (of type VariableDecl) wants to wholeAgain() because 'just set expr to gc_malloc cause generic!'
__returnVal11 = element (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
__returnArg10 = __returnVal11 (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
Resolving variable decl __returnVal9 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal11 : T = gc_malloc(size)
memcpy(__returnVal11, element, Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
memcpy(__returnArg10, __returnVal11, Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
Resolving variable decl __returnVal14 : T = gc_malloc(size)
memcpy(__returnVal14, (comma expr), Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
memcpy(__returnArg13, __returnVal14, Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
Resolving variable decl __returnVal14 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal45 : <unknown type> = (comma expr)
__returnVal45 : T = gc_malloc(size) (of type VariableDecl) wants to wholeAgain() because 'just set expr to gc_malloc cause generic!'
__returnVal45 = (comma expr) (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
__returnArg44 = __returnVal45 (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
Resolving variable decl __returnVal21 : Char = c
memcpy(__returnArg20, __returnVal21&, Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
Resolving variable decl __returnVal23 : <unknown type> = str[i]
__returnArg22 = __returnVal23 (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
Resolving variable decl __returnVal21 : Char = c
Resolving variable decl __returnVal23 : Char = StringIterator.str[StringIterator.i]
memcpy(__returnArg22, __returnVal23&, Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
Resolving variable decl __returnVal2 : V = gc_malloc(Class.size)
Resolving variable decl __returnVal3 : Pointer = NullLiteral
Resolving variable decl __returnVal2 : V = gc_malloc(Class.size)
Resolving variable decl __returnVal3 : Pointer = NullLiteral
Resolving variable decl __returnVal27 : T = gc_malloc(size)
memcpy(__returnVal27, (comma expr), Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
memcpy(__returnArg26, __returnVal27, Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
Resolving variable decl __returnVal30 : <unknown type> = (comma expr)
__returnVal30 : T = gc_malloc(size) (of type VariableDecl) wants to wholeAgain() because 'just set expr to gc_malloc cause generic!'
__returnVal30 = (comma expr) (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
__returnArg29 = __returnVal30 (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
Resolving variable decl __returnVal27 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal30 : T = gc_malloc(size)
memcpy(__returnVal30, (comma expr), Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
memcpy(__returnArg29, __returnVal30, Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
Resolving variable decl __returnVal33 : <unknown type> = (comma expr)
__returnVal33 : V = gc_malloc(size) (of type VariableDecl) wants to wholeAgain() because 'just set expr to gc_malloc cause generic!'
__returnVal33 = (comma expr) (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
__returnArg32 = __returnVal33 (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
Resolving variable decl __returnVal5 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal7 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal35 : <unknown type> = old
__returnVal35 : T = gc_malloc(size) (of type VariableDecl) wants to wholeAgain() because 'just set expr to gc_malloc cause generic!'
__returnVal35 = old (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
__returnArg34 = __returnVal35 (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
Resolving variable decl __returnVal5 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal7 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal35 : T = gc_malloc(size)
memcpy(__returnVal35, old, Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
memcpy(__returnArg34, __returnVal35, Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
Resolving variable decl __returnVal9 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal11 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal9 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal11 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal39 : <unknown type> = (comma expr)
__returnVal39 : T = gc_malloc(size) (of type VariableDecl) wants to wholeAgain() because 'just set expr to gc_malloc cause generic!'
__returnVal39 = (comma expr) (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
__returnArg38 = __returnVal39 (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
Resolving variable decl __returnVal14 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal45 : T = gc_malloc(size)
memcpy(__returnVal45, (comma expr), Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
memcpy(__returnArg44, __returnVal45, Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
Resolving variable decl __returnVal14 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal45 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal49 : <unknown type> = (comma expr)
__returnVal49 : T = gc_malloc(size) (of type VariableDecl) wants to wholeAgain() because 'just set expr to gc_malloc cause generic!'
__returnVal49 = (comma expr) (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
__returnArg48 = __returnVal49 (of type BinaryOp) wants to wholeAgain() because 'Replaced ourselves, need to tidy up'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
Resolving variable decl __returnVal21 : Char = c
Resolving variable decl __returnVal23 : Char = StringIterator.str[StringIterator.i]
Resolving variable decl __returnVal21 : Char = c
Resolving variable decl __returnVal23 : Char = StringIterator.str[StringIterator.i]
Resolving variable decl __returnVal2 : V = gc_malloc(Class.size)
Resolving variable decl __returnVal3 : Pointer = NullLiteral
Resolving variable decl __returnVal2 : V = gc_malloc(Class.size)
Resolving variable decl __returnVal3 : Pointer = NullLiteral
Resolving variable decl __returnVal27 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal30 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal27 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal30 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal33 : V = gc_malloc(size)
memcpy(__returnVal33, (comma expr), Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
memcpy(__returnArg32, __returnVal33, Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
Resolving variable decl __returnVal5 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal7 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal35 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal5 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal7 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal35 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal9 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal11 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal9 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal11 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal39 : T = gc_malloc(size)
memcpy(__returnVal39, (comma expr), Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
memcpy(__returnArg38, __returnVal39, Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
Resolving variable decl __returnVal14 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal45 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal14 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal45 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal49 : T = gc_malloc(size)
memcpy(__returnVal49, (comma expr), Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
memcpy(__returnArg48, __returnVal49, Class.size) (of type FunctionCall) wants to wholeAgain() because 'because of return type void'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
Resolving variable decl __returnVal2 : V = gc_malloc(Class.size)
Resolving variable decl __returnVal3 : Pointer = NullLiteral
Resolving variable decl __returnVal2 : V = gc_malloc(Class.size)
Resolving variable decl __returnVal3 : Pointer = NullLiteral
Resolving variable decl __returnVal27 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal30 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal27 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal30 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal33 : V = gc_malloc(Class.size)
Resolving variable decl __returnVal5 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal7 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal35 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal5 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal7 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal35 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal9 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal11 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal9 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal11 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal39 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal14 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal45 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal14 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal45 : T = gc_malloc(Class.size)
Resolving variable decl __returnVal49 : T = gc_malloc(Class.size)
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
     - access to returnVal still not resolved, looping (ref = (nil))
returnVal (of type VariableAccess) wants to wholeAgain() because 'Couldn't resolve returnVal'
returnVal != NullLiteral (of type Comparison) wants to wholeAgain() because 'score of operator !=(str1 : String, str2 : String) == -1 !!'
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
? Looking for variable returnVal in FStream
? Looking for variable returnVal in Object
            \_, str[strlen(str)] != CharLiteral && returnVal != NullLiteral
              \_, returnVal != NullLiteral
lang/stdio:77:43 [ERROR] No such variable returnVal
        while(str[strlen(str)] != '\n' && returnVal != null) {
